//
// TokenResponseDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct RefreshTokenResponseDTO: Codable, JSONEncodable, Hashable {

    /** An access token that can be provided in subsequent calls, for example to Spotify Web API services. */
    public var accessToken: String
    /** How the access token may be used: always "Bearer". */
    public var tokenType: String
    /** A space-separated list of scopes which have been granted for this access_token. */
    public var scope: String?
    /** How the access token may be used: always "Bearer". */
    public var expiresIn: Int
    /** A refresh token to refresh access token. */
    public var refreshToken: String

    public init(accessToken: String, tokenType: String, scope: String? = nil, expiresIn: Int, refreshToken: String) {
        self.accessToken = accessToken
        self.tokenType = tokenType
        self.scope = scope
        self.expiresIn = expiresIn
        self.refreshToken = refreshToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accessToken = "access_token"
        case tokenType = "token_type"
        case scope
        case expiresIn = "expires_in"
        case refreshToken = "refresh_token"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(accessToken, forKey: .accessToken)
        try container.encode(tokenType, forKey: .tokenType)
        try container.encodeIfPresent(scope, forKey: .scope)
        try container.encode(expiresIn, forKey: .expiresIn)
        try container.encode(refreshToken, forKey: .refreshToken)
    }
}
